###
### GitHub action to run pre-commit hooks and linting
###

# Runs all pre-commit hooks including Python (ruff, pyright) and
# JavaScript/TypeScript (ESLint, Stylelint, Prettier, TypeScript) checks.
# Also uploads ESLint results to GitHub Security for code scanning.

name: Pre-commit hooks & Security Scanning

on:
  push:
    branches: ['main']
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ['main']

jobs:
  linting:
    name: Run pre-commit hooks & security scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.9"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ runner.os }}-

      - name: Install Python dependencies
        run: uv sync --locked --group dev

      - name: Install JavaScript dependencies
        run: yarn install --frozen-lockfile

      - name: Run pre-commit hooks
        run: uv run pre-commit run --all-files

      - name: Generate ESLint SARIF for security scanning
        run: yarn eslint-ci
        continue-on-error: true

      - name: Upload ESLint analysis results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

      - name: Minimize uv cache
        run: uv cache prune --ci
